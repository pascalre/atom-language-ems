# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

scopeName: 'source.ems'
name: 'EMS'

fileTypes: [
  '.ems',
  '.emsx'
]

patterns: [
    { include: '#comment' }
    { include: '#section' }
    { include: '#instruction' }
    { include: '#strings' }
]

repository:
    comment: {
        name: 'comment.line.ems'
        match: '#.*'
    }
    instruction: {
        name: 'instruction.ems',
        match: '\\b(create|addprop|add|commit|compact|delete|disconnect|echo|exit|grant|help|purge|removeprop|remove|resume|revoke|setprop|set|show|transaction)\\b'
    }
  #'comments':
  #  {
  #      "name": "comment.line.ems",
  #      "match": "#.*"
  #  }
  #  'instruction':
  #  {
  #      "name": "meta.instruction.ems",
  #      "match": "\\b(create|addprop|add|commit|compact|delete|disconnect|echo|exit|grant|help|purge|removeprop|remove|resume|revoke|setprop|set|show|transaction)\\b"
  #  },
  #  'argument':
  #  {
  #      "name": "meta.argument.ems",
  #      "match": "(admin|queue|topic|generic|bridge|route|user|all|connection|durable|factory|group|jndiname|message|server)"
  #  }